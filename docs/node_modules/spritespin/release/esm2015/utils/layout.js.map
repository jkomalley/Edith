{"version":3,"file":"layout.js","sourceRoot":"","sources":["../../../src/utils/layout.ts"],"names":[],"mappings":"AA6BA;;GAEG;AACH,MAAM,uBAAuB,IAAgB;IAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAA;IACnF,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAA;IACvF,MAAM,CAAC;QACL,MAAM,EAAE,KAAK,GAAG,MAAM;QACtB,MAAM;QACN,KAAK;KACN,CAAA;AACH,CAAC;AAED,MAAM,0BAA0B,IAAgB;IAC9C,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;IAC/B,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,gBAAgB,KAAK,UAAU,CAAC,CAAC,CAAC;QAAC,MAAM,CAAC,IAAI,CAAA;IAAC,CAAC;IAElE,MAAM,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;IACrD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAAC,MAAM,CAAC,IAAI,CAAA;IAAC,CAAC;IAEjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAC9D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAA;IAClD,MAAM,CAAC,IAAI,CAAA;AACb,CAAC;AAED;;GAEG;AACH,MAAM,uBAAuB,IAAgB;IAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAA;IACnF,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAA;IACvF,MAAM,CAAC;QACL,MAAM,EAAE,KAAK,GAAG,MAAM;QACtB,MAAM;QACN,KAAK;KACN,CAAA;AACH,CAAC;AAED;;GAEG;AACH,MAAM,yBAAyB,IAAc,EAAE,KAAqB,EAAE,KAAqB;IAEzF,WAAW;IACX,MAAM,KAAK,GAAG,IAAI,KAAK,KAAK,CAAA;IAC5B,MAAM,MAAM,GAAG,IAAI,KAAK,MAAM,CAAA;IAC9B,MAAM,OAAO,GAAG,IAAI,KAAK,SAAS,CAAA;IAElC,mBAAmB;IACnB,MAAM,MAAM,GAAW;QACrB,KAAK,EAAM,MAAM;QACjB,MAAM,EAAK,MAAM;QACjB,GAAG,EAAQ,CAAC;QACZ,IAAI,EAAO,CAAC;QACZ,MAAM,EAAK,CAAC;QACZ,KAAK,EAAM,CAAC;QACZ,QAAQ,EAAG,UAAU;QACrB,QAAQ,EAAG,QAAQ;KACpB,CAAA;IAED,sBAAsB;IACtB,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC;QACrB,MAAM,CAAC,MAAM,CAAA;IACf,CAAC;IAED,sBAAsB;IACtB,MAAM,eAAe,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAA;IAEpD,mBAAmB;IACnB,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAA;IACvB,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAA;IAEzB,gDAAgD;IAChD,EAAE,CAAC,CAAC,KAAK,IAAI,eAAe,IAAI,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QAC3D,KAAK,GAAG,KAAK,CAAC,KAAK,CAAA;QACnB,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAA;IACrC,CAAC;IACD,EAAE,CAAC,CAAC,MAAM,IAAI,eAAe,IAAI,KAAK,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QAC3D,MAAM,GAAG,KAAK,CAAC,MAAM,CAAA;QACrB,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAA;IACrC,CAAC;IAED,oBAAoB;IACpB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IACzB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;IAE3B,qBAAqB;IACrB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAA;IACpB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;IACpD,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAA;IACnD,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAA;IAC1B,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAA;IAE1B,MAAM,CAAC,MAAM,CAAA;AACf,CAAC","sourcesContent":["import { SizeMode } from '../core/models'\n\nexport interface Layoutable {\n  width?: number\n  height?: number\n  frameWidth?: number\n  frameHeight?: number\n  target: any\n  sizeMode?: SizeMode\n}\n\nexport interface Layout {\n  [key: string]: any\n  width: string | number\n  height: string | number\n  top: number\n  left: number\n  bottom: number\n  right: number\n  position: 'absolute'\n  overflow: 'hidden'\n}\n\nexport interface SizeWithAspect {\n  width: number\n  height: number\n  aspect: number\n}\n\n/**\n *\n */\nexport function getOuterSize(data: Layoutable): SizeWithAspect {\n  const width = Math.floor(data.width || data.frameWidth || data.target.innerWidth())\n  const height = Math.floor(data.height || data.frameHeight || data.target.innerHeight())\n  return {\n    aspect: width / height,\n    height,\n    width\n  }\n}\n\nexport function getComputedSize(data: Layoutable): SizeWithAspect {\n  const size = getOuterSize(data)\n  if (typeof window.getComputedStyle !== 'function') { return size }\n\n  const style = window.getComputedStyle(data.target[0])\n  if (!style.width) { return size }\n\n  size.width = Math.floor(Number(style.width.replace('px', '')))\n  size.height = Math.floor(size.width / size.aspect)\n  return size\n}\n\n/**\n *\n */\nexport function getInnerSize(data: Layoutable): SizeWithAspect {\n  const width = Math.floor(data.frameWidth || data.width || data.target.innerWidth())\n  const height = Math.floor(data.frameHeight || data.height || data.target.innerHeight())\n  return {\n    aspect: width / height,\n    height,\n    width\n  }\n}\n\n/**\n *\n */\nexport function getInnerLayout(mode: SizeMode, inner: SizeWithAspect, outer: SizeWithAspect): Layout {\n\n  // get mode\n  const isFit = mode === 'fit'\n  const isFill = mode === 'fill'\n  const isMatch = mode === 'stretch'\n\n  // resulting layout\n  const layout: Layout = {\n    width    : '100%',\n    height   : '100%',\n    top      : 0,\n    left     : 0,\n    bottom   : 0,\n    right    : 0,\n    position : 'absolute',\n    overflow : 'hidden'\n  }\n\n  // no calculation here\n  if (!mode || isMatch) {\n    return layout\n  }\n\n  // get size and aspect\n  const aspectIsGreater = inner.aspect >= outer.aspect\n\n  // mode == original\n  let width = inner.width\n  let height = inner.height\n\n  // keep aspect ratio but fit/fill into container\n  if (isFit && aspectIsGreater || isFill && !aspectIsGreater) {\n    width = outer.width\n    height = outer.width / inner.aspect\n  }\n  if (isFill && aspectIsGreater || isFit && !aspectIsGreater) {\n    height = outer.height\n    width = outer.height * inner.aspect\n  }\n\n  // floor the numbers\n  width = Math.floor(width)\n  height = Math.floor(height)\n\n  // position in center\n  layout.width = width\n  layout.height = height\n  layout.top = Math.floor((outer.height - height) / 2)\n  layout.left = Math.floor((outer.width - width) / 2)\n  layout.right = layout.left\n  layout.bottom = layout.top\n\n  return layout\n}\n"]}