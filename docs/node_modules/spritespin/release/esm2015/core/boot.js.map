{"version":3,"file":"boot.js","sourceRoot":"","sources":["../../../src/core/boot.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Utils from '../utils'\nimport { callbackNames, defaults, eventNames, eventsToPrevent, namespace } from './constants'\nimport { applyLayout } from './layout'\nimport { Data, Options } from './models'\nimport { applyAnimation, stopAnimation } from './playback'\nimport { applyPlugins } from './plugins'\n\nconst $ = Utils.$\n\nlet counter = 0\n/**\n * Collection of all SpriteSpin instances\n */\nexport const instances: {[key: string]: Data} = {}\n\nfunction pushInstance(data: Data) {\n  counter += 1\n  data.id = String(counter)\n  instances[data.id] = data\n}\n\nfunction popInstance(data: Data) {\n  delete instances[data.id]\n}\n\nfunction eachInstance(cb) {\n  for (const id in instances) {\n    if (instances.hasOwnProperty(id)) {\n      cb(instances[id])\n    }\n  }\n}\n\nlet lazyinit = () => {\n  // replace function with a noop\n  // this logic must run only once\n  lazyinit = () => { /* noop */ }\n\n  function onEvent(eventName, e) {\n    eachInstance((data: Data) => {\n      for (const module of data.plugins) {\n        if (typeof module[eventName] === 'function') {\n          module[eventName].apply(data.target, [e, data])\n        }\n      }\n    })\n  }\n\n  function onResize() {\n    eachInstance((data: Data) => {\n      if (data.responsive) {\n        boot(data)\n      }\n    })\n  }\n\n  for (const eventName of eventNames) {\n    $(window.document).bind(eventName + '.' + namespace, (e) => {\n      onEvent('document' + eventName, e)\n    })\n  }\n\n  let resizeTimeout = null\n  $(window).on('resize', () => {\n    window.clearTimeout(resizeTimeout)\n    resizeTimeout = window.setTimeout(onResize, 100)\n  })\n}\n\n/**\n * (re)binds all spritespin events on the target element\n *\n * @internal\n */\nexport function applyEvents(data: Data) {\n  const target = data.target\n\n  // Clear all SpriteSpin events on the target element\n  Utils.unbind(target)\n\n  // disable all default browser behavior on the following events\n  // mainly prevents image drag operation\n  for (const eName of eventsToPrevent) {\n    Utils.bind(target, eName, Utils.prevent)\n  }\n\n  // Bind module functions to SpriteSpin events\n  for (const plugin of data.plugins) {\n    for (const eName of eventNames) {\n      Utils.bind(target, eName, plugin[eName])\n    }\n    for (const eName of callbackNames) {\n      Utils.bind(target, eName, plugin[eName])\n    }\n  }\n\n  // bind auto start function to load event.\n  Utils.bind(target, 'onLoad', (e, d) => {\n    applyAnimation(d)\n  })\n\n  // bind all user events that have been passed on initialization\n  for (const eName of callbackNames) {\n    Utils.bind(target, eName, data[eName])\n  }\n}\n\nfunction applyMetrics(data: Data) {\n  if (!data.images) {\n    data.metrics = []\n  }\n  data.metrics = Utils.measure(data.images, data)\n  const spec = Utils.findSpecs(data.metrics, data.frames, 0, 0)\n  if (spec.sprite) {\n    // TODO: try to remove frameWidth/frameHeight\n    data.frameWidth = spec.sprite.width\n    data.frameHeight = spec.sprite.height\n  }\n}\n\n/**\n * Runs the boot process.\n *\n * @remarks\n * (re)initializes plugins, (re)initializes the layout, (re)binds events and loads source images.\n *\n * @internal\n */\nexport function boot(data: Data) {\n  applyPlugins(data)\n  applyEvents(data)\n  applyLayout(data)\n\n  data.source = Utils.toArray(data.source)\n  data.loading = true\n  data.target\n    .addClass('loading')\n    .trigger('onInit.' + namespace, data)\n  Utils.preload({\n    source: data.source,\n    crossOrigin: data.crossOrigin,\n    preloadCount: data.preloadCount,\n    progress: (progress) => {\n      data.progress = progress\n      data.target.trigger('onProgress.' + namespace, data)\n    },\n    complete: (images) => {\n      data.images = images\n      data.loading = false\n      data.frames = data.frames || images.length\n\n      applyMetrics(data)\n      applyLayout(data)\n      data.stage.show()\n      data.target\n        .removeClass('loading')\n        .trigger('onLoad.' + namespace, data)\n        .trigger('onFrame.' + namespace, data)\n        .trigger('onDraw.' + namespace, data)\n        .trigger('onComplete.' + namespace, data)\n    }\n  })\n}\n\n/**\n * Creates a new SpriteSpin instance\n *\n * @public\n */\nexport function create(options: Options): Data {\n  const target = options.target\n\n  // SpriteSpin is not initialized\n  // Create default settings object and extend with given options\n  const data = $.extend(true, {}, defaults, options) as Data\n\n  // ensure source is set\n  data.source = data.source || []\n  // ensure plugins are set\n  data.plugins = data.plugins || [\n    '360',\n    'drag'\n  ]\n\n  // if image tags are contained inside this DOM element\n  // use these images as the source files\n  target.find('img').each(() => {\n    if (!Array.isArray(data.source)) {\n      data.source = []\n    }\n    data.source.push($(this).attr('src'))\n  })\n\n  // build inner html\n  // <div>\n  //   <div class='spritespin-stage'></div>\n  //   <canvas class='spritespin-canvas'></canvas>\n  // </div>\n  target\n    .empty()\n    .addClass('spritespin-instance')\n    .append(\"<div class='spritespin-stage'></div>\")\n\n  // add the canvas element if canvas rendering is enabled and supported\n  if (data.renderer === 'canvas') {\n    const canvas = document.createElement('canvas')\n    if (!!(canvas.getContext && canvas.getContext('2d'))) {\n      data.canvas = $(canvas).addClass('spritespin-canvas') as any\n      data.context = canvas.getContext('2d')\n      target.append(data.canvas)\n      target.addClass('with-canvas')\n    } else {\n      // fallback to image rendering mode\n      data.renderer = 'image'\n    }\n  }\n\n  // setup references to DOM elements\n  data.target = target\n  data.stage = target.find('.spritespin-stage')\n\n  // store the data\n  target.data(namespace, data)\n  pushInstance(data)\n\n  return data\n}\n\n/**\n * Creates a new SpriteSpin instance, or updates an existing one\n *\n * @public\n */\nexport function createOrUpdate(options: Options): Data {\n  lazyinit()\n\n  let data  = options.target.data(namespace) as Data\n  if (!data) {\n    data = create(options)\n  } else {\n    $.extend(data, options)\n  }\n  boot(data)\n\n  return data\n}\n\n/**\n * Destroys the SpriteSpin instance\n *\n * @remarks\n * - stops running animation\n * - unbinds all events\n * - deletes the data on the target element\n *\n * @public\n */\nexport function destroy(data: Data) {\n  popInstance(data)\n  stopAnimation(data)\n  data.target\n    .trigger('onDestroy', data)\n    .html(null)\n    .attr('style', null)\n    .attr('unselectable', null)\n    .removeClass(['spritespin-instance', 'with-canvas'])\n  Utils.unbind(data.target)\n  data.target.removeData(namespace)\n}\n"]}