{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../src/core/constants.ts"],"names":[],"mappings":"AAEA;;GAEG;AACH,MAAM,CAAC,MAAM,SAAS,GAAG,YAAY,CAAA;AAErC;;;GAGG;AACH,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB,WAAW;IACX,WAAW;IACX,SAAS;IACT,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,OAAO;IACP,OAAO;IACP,UAAU;IACV,YAAY;IACZ,WAAW;IACX,UAAU;IACV,aAAa;IACb,aAAa;IACb,cAAc;IACd,eAAe;IACf,YAAY;CACb,CAAA;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG;IAC3B,QAAQ;IACR,YAAY;IACZ,QAAQ;IACR,gBAAgB;IAChB,SAAS;IACT,QAAQ;IACR,YAAY;IACZ,WAAW;CACZ,CAAA;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG;IAC7B,WAAW;CACZ,CAAA;AAED;;;GAGG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAY;IAC/B,MAAM,EAAc,SAAS;IAC7B,KAAK,EAAe,SAAS;IAC7B,MAAM,EAAc,SAAS;IAC7B,MAAM,EAAc,SAAS;IAC7B,OAAO,EAAa,SAAS;IAC7B,KAAK,EAAe,CAAC;IACrB,QAAQ,EAAY,SAAS;IAE7B,QAAQ,EAAY,QAAQ;IAE5B,IAAI,EAAgB,CAAC;IACrB,KAAK,EAAe,CAAC;IACrB,SAAS,EAAW,EAAE;IACtB,OAAO,EAAa,IAAI;IACxB,aAAa,EAAO,KAAK;IACzB,OAAO,EAAa,KAAK;IACzB,IAAI,EAAgB,IAAI;IACxB,SAAS,EAAW,CAAC;IAErB,IAAI,EAAgB,IAAI;IACxB,QAAQ,EAAY,KAAK;IACzB,KAAK,EAAe,CAAC;IACrB,SAAS,EAAW,SAAS;IAC7B,WAAW,EAAS,YAAY;IAChC,iBAAiB,EAAG,IAAI;IACxB,YAAY,EAAQ,SAAS;IAE7B,gBAAgB,EAAI,CAAC,GAAG,EAAE,IAAI,CAAC;IAC/B,UAAU,EAAU,SAAS;IAC7B,OAAO,EAAa,SAAS;CAC9B,CAAA","sourcesContent":["import { Options } from './models'\n\n/**\n * The namespace that is used to bind functions to DOM events and store the data object\n */\nexport const namespace = 'spritespin'\n\n/**\n * Event names that are recognized by SpriteSpin. A module can implement any of these and they will be bound\n * to the target element on which the plugin is called.\n */\nexport const eventNames = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'mouseenter',\n  'mouseover',\n  'mouseleave',\n  'mousewheel',\n  'wheel',\n  'click',\n  'dblclick',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  'selectstart',\n  'gesturestart',\n  'gesturechange',\n  'gestureend'\n]\n\n/**\n *\n */\nexport const callbackNames = [\n  'onInit',\n  'onProgress',\n  'onLoad',\n  'onFrameChanged',\n  'onFrame',\n  'onDraw',\n  'onComplete',\n  'onDestroy'\n]\n\n/**\n * Names of events for that the default behavior should be prevented.\n */\nexport const eventsToPrevent = [\n  'dragstart'\n]\n\n/**\n * Default set of SpriteSpin options. This also represents the majority of data attributes that are used during the\n * lifetime of a SpriteSpin instance. The data is stored inside the target DOM element on which the plugin is called.\n */\nexport const defaults: Options = {\n  source            : undefined,    // Stitched source image or array of files\n  width             : undefined,    // actual display width\n  height            : undefined,    // actual display height\n  frames            : undefined,    // Total number of frames\n  framesX           : undefined,    // Number of frames in one row of sprite sheet (if source is a sprite sheet)\n  lanes             : 1,            // Number of 360 sequences. Used for 3D like effect.\n  sizeMode          : undefined,    //\n\n  renderer          : 'canvas',     // The rendering mode to use\n\n  lane              : 0,            // The initial sequence number to play\n  frame             : 0,            // Initial (and current) frame number\n  frameTime         : 40,           // Time in ms between updates. 40 is exactly 25 FPS\n  animate           : true,         // If true starts the animation on load\n  retainAnimate     : false,        // If true, retains the animation after user interaction\n  reverse           : false,        // If true animation is played backward\n  loop              : true,         // If true loops the animation\n  stopFrame         : 0,            // Stops the animation at this frame if loop is disabled\n\n  wrap              : true,         // If true wraps around the frame index on user interaction\n  wrapLane          : false,        // If true wraps around the lane index on user interaction\n  sense             : 1,            // Interaction sensitivity used by behavior implementations\n  senseLane         : undefined,    // Interaction sensitivity used by behavior implementations\n  orientation       : 'horizontal', // Preferred axis for user interaction\n  detectSubsampling : true,         // Tries to detect whether the images are down sampled by the browser.\n  preloadCount      : undefined,    // Number of frames to preload. If nothing is set, all frames are preloaded.\n\n  touchScrollTimer  : [200, 1500],  // Time range in ms when touch scroll will be disabled during interaction with SpriteSpin\n  responsive        : undefined,\n  plugins           : undefined\n}\n"]}