{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../src/api/common.ts"],"names":[],"mappings":"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","sourcesContent":["import * as SpriteSpin from '../core'\n\n// tslint:disable:object-literal-shorthand\n// tslint:disable:only-arrow-functions\n\nSpriteSpin.extendApi({\n  // Gets a value indicating whether the animation is currently running.\n  isPlaying: function() {\n    return SpriteSpin.getPlaybackState(this.data).handler != null\n  },\n\n  // Gets a value indicating whether the animation looping is enabled.\n  isLooping: function() {\n    return this.data.loop\n  },\n\n  // Starts/Stops the animation playback\n  toggleAnimation: function() {\n    if (this.isPlaying()) {\n      this.stopAnimation()\n    } else {\n      this.startAnimation()\n    }\n  },\n\n  // Stops animation playback\n  stopAnimation: function() {\n    this.data.animate = false\n    SpriteSpin.stopAnimation(this.data)\n  },\n\n  // Starts animation playback\n  startAnimation: function() {\n    this.data.animate = true\n    SpriteSpin.applyAnimation(this.data)\n  },\n\n  // Sets a value indicating whether the animation should be looped or not.\n  // This might start the animation (if the 'animate' data attribute is set to true)\n  loop: function(value) {\n    this.data.loop = value\n    SpriteSpin.applyAnimation(this.data)\n    return this\n  },\n\n  // Gets the current frame number\n  currentFrame: function() {\n    return this.data.frame\n  },\n\n  // Updates SpriteSpin to the specified frame.\n  updateFrame: function(frame) {\n    SpriteSpin.updateFrame(this.data, frame)\n    return this\n  },\n\n  // Skips the given number of frames\n  skipFrames: function(step) {\n    const data = this.data\n    SpriteSpin.updateFrame(data, data.frame + (data.reverse ? - step : + step))\n    return this\n  },\n\n  // Updates SpriteSpin so that the next frame is shown\n  nextFrame: function() {\n    return this.skipFrames(1)\n  },\n\n  // Updates SpriteSpin so that the previous frame is shown\n  prevFrame: function() {\n    return this.skipFrames(-1)\n  },\n\n  // Starts the animations that will play until the given frame number is reached\n  // options:\n  //   force [boolean] starts the animation, even if current frame is the target frame\n  //   nearest [boolean] animates to the direction with minimum distance to the target frame\n  playTo: function(frame, options) {\n    const data = this.data\n    options = options || {}\n    if (!options.force && data.frame === frame) {\n      return\n    }\n    if (options.nearest) {\n      // distance to the target frame\n      const a = frame - data.frame\n      // distance to last frame and the to target frame\n      const b = frame > data.frame ? a - data.frames : a + data.frames\n      // minimum distance\n      const c = Math.abs(a) < Math.abs(b) ? a : b\n      data.reverse = c < 0\n    }\n    data.animate = true\n    data.loop = false\n    data.stopFrame = frame\n    SpriteSpin.applyAnimation(data)\n    return this\n  }\n})\n"]}