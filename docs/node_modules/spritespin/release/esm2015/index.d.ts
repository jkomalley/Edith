/// <reference types="jquery" />
export * from './core';
export { sourceArray } from './utils';
import { bind, clamp, detectSubsampling, findSpecs, getComputedSize, getCursorPosition, getInnerLayout, getInnerSize, getOuterSize, isFunction, Layout, Layoutable, measure, MeasureSheetOptions, naturalSize, noop, pixelRatio, preload, PreloadOptions, PreloadProgress, prevent, SheetSpec, SizeWithAspect, sourceArray, SourceArrayOptions, SpriteSpec, toArray, unbind, wrap } from './utils';
export declare const Utils: {
    $: JQueryStatic<HTMLElement>;
    bind: typeof bind;
    clamp: typeof clamp;
    detectSubsampling: typeof detectSubsampling;
    error: (message?: any, ...optionalParams: any[]) => void;
    findSpecs: typeof findSpecs;
    getComputedSize: typeof getComputedSize;
    getCursorPosition: typeof getCursorPosition;
    getInnerLayout: typeof getInnerLayout;
    getInnerSize: typeof getInnerSize;
    getOuterSize: typeof getOuterSize;
    isFunction: typeof isFunction;
    log: (message?: any, ...optionalParams: any[]) => void;
    measure: typeof measure;
    naturalSize: typeof naturalSize;
    noop: typeof noop;
    pixelRatio: typeof pixelRatio;
    preload: typeof preload;
    prevent: typeof prevent;
    sourceArray: typeof sourceArray;
    toArray: typeof toArray;
    unbind: typeof unbind;
    warn: (message?: any, ...optionalParams: any[]) => void;
    wrap: typeof wrap;
};
export { Layout, Layoutable, MeasureSheetOptions, PreloadOptions, PreloadProgress, SheetSpec, SizeWithAspect, SourceArrayOptions, SpriteSpec };
import './api';
import './plugins';
