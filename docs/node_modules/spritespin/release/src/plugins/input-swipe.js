import * as SpriteSpin from '../core';
(function () {
    var NAME = 'swipe';
    function getState(data) {
        return SpriteSpin.getPluginState(data, NAME);
    }
    function getOption(data, name, fallback) {
        return data[name] || fallback;
    }
    function init(e, data) {
        var state = getState(data);
        state.fling = getOption(data, 'swipeFling', 10);
        state.snap = getOption(data, 'swipeSnap', 0.50);
    }
    function start(e, data) {
        if (!data.loading && !SpriteSpin.is(data, 'dragging')) {
            SpriteSpin.updateInput(e, data);
            SpriteSpin.flag(data, 'dragging', true);
        }
    }
    function update(e, data) {
        if (!SpriteSpin.is(data, 'dragging')) {
            return;
        }
        SpriteSpin.updateInput(e, data);
        var frame = data.frame;
        var lane = data.lane;
        SpriteSpin.updateFrame(data, frame, lane);
    }
    function end(e, data) {
        if (!SpriteSpin.is(data, 'dragging')) {
            return;
        }
        SpriteSpin.flag(data, 'dragging', false);
        var state = getState(data);
        var input = SpriteSpin.getInputState(data);
        var frame = data.frame;
        var lane = data.lane;
        var snap = state.snap;
        var fling = state.fling;
        var dS, dF;
        if (data.orientation === 'horizontal') {
            dS = input.ndX;
            dF = input.ddX;
        }
        else {
            dS = input.ndY;
            dF = input.ddY;
        }
        if (dS >= snap || dF >= fling) {
            frame = data.frame - 1;
        }
        else if (dS <= -snap || dF <= -fling) {
            frame = data.frame + 1;
        }
        SpriteSpin.resetInput(data);
        SpriteSpin.updateFrame(data, frame, lane);
        SpriteSpin.stopAnimation(data);
    }
    SpriteSpin.registerPlugin(NAME, {
        name: NAME,
        onLoad: init,
        mousedown: start,
        mousemove: update,
        mouseup: end,
        mouseleave: end,
        touchstart: start,
        touchmove: update,
        touchend: end,
        touchcancel: end
    });
})();
//# sourceMappingURL=input-swipe.js.map