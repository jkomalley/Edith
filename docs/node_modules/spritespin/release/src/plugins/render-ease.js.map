{"version":3,"file":"render-ease.js","sourceRoot":"","sources":["../../../src/plugins/render-ease.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,UAAU,MAAM,SAAS,CAAA;AAGrC,CAAC;IAED,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAA;IACpB,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAA;IAEpB,IAAM,IAAI,GAAG,MAAM,CAAA;IA0BnB,kBAAkB,IAAI;QACpB,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAc,CAAA;IAC3D,CAAC;IAED,mBAAmB,IAAI,EAAE,IAAI,EAAE,QAAQ;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAA;IAC/B,CAAC;IAED,cAAc,CAAC,EAAE,IAAqB;QACpC,IAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;QAC5B,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAC/D,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,aAAa,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAA;QACvE,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,eAAe,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAA;QAChE,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAA;QAC7E,KAAK,CAAC,OAAO,GAAG,EAAE,CAAA;QAClB,KAAK,CAAC,KAAK,GAAG,EAAE,CAAA;IAClB,CAAC;IAED,gBAAgB,CAAC,EAAE,IAAqB;QACtC,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;YACpC,QAAQ,CAAC,IAAI,CAAC,CAAA;YACd,WAAW,CAAC,IAAI,CAAC,CAAA;QACnB,CAAC;IACH,CAAC;IAED,aAAa,CAAC,EAAE,IAAqB;QACnC,IAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;QAC5B,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAA;QAE7B,IAAI,IAAI,CAAA;QACR,IAAI,KAAK,GAAG,CAAC,CAAA;QACb,IAAI,MAAM,GAAG,CAAC,CAAA;QACd,IAAI,IAAI,GAAG,CAAC,CAAA;QACZ,GAAG,CAAC,CAAiB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;YAAvB,IAAM,MAAM,gBAAA;YACf,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,IAAI,GAAG,MAAM,CAAA;gBACb,QAAQ,CAAA;YACV,CAAC;YAED,IAAM,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;YAClC,EAAE,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;gBACzB,KAAK,GAAG,MAAM,GAAG,IAAI,GAAG,CAAC,CAAA;gBACzB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;YACvB,CAAC;YAED,MAAM,IAAI,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;YACnC,KAAK,IAAI,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;YAChC,IAAI,IAAI,EAAE,CAAA;YACV,IAAI,GAAG,MAAM,CAAA;SACd;QACD,OAAO,CAAC,MAAM,GAAG,CAAC,CAAA;QAClB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,CAAA;QACR,CAAC;QAED,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACtB,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA;QACf,KAAK,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC,UAAU,CAAA;QAEhD,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;QACxB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAA;QAChB,KAAK,CAAC,SAAS,GAAG,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC,UAAU,CAAA;QAElD,IAAI,CAAC,IAAI,CAAC,CAAA;IACZ,CAAC;IAED,qBAAqB,IAAqB;QACxC,IAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;QAC5B,mBAAmB;QACnB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;YACjB,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;YAC1B,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC,CAAA;QACF,mBAAmB;QACnB,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;YAC/C,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;QACvB,CAAC;IACH,CAAC;IAED,kBAAkB,IAAqB;QACrC,IAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;QAC5B,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;YAClC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAA;QACtB,CAAC;IACH,CAAC;IAED,cAAc,IAAqB;QACjC,IAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;QAC5B,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,cAAQ,IAAI,CAAC,IAAI,CAAC,CAAA,CAAC,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,CAAA;IAC3E,CAAC;IAED,cAAc,IAAqB;QACjC,IAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;QAC5B,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAA;QAC7B,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,SAAS,CAAA;QAC/B,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAA;QAC/B,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,OAAO,CAAA;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAA;QACpD,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAA;QAEjD,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;QAEzC,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;YACpC,QAAQ,CAAC,IAAI,CAAC,CAAA;QAChB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,IAAI,CAAC,CAAA;QACZ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,QAAQ,CAAC,IAAI,CAAC,CAAA;QAChB,CAAC;IACH,CAAC;IAED,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE;QAC9B,IAAI,EAAE,IAAI;QAEV,MAAM,EAAE,IAAI;QAEZ,SAAS,EAAE,MAAM;QACjB,OAAO,EAAE,GAAG;QACZ,UAAU,EAAE,GAAG;QAEf,SAAS,EAAE,MAAM;QACjB,QAAQ,EAAE,GAAG;QACb,WAAW,EAAE,GAAG;KACjB,CAAC,CAAA;AAEF,CAAC,CAAC,EAAE,CAAA","sourcesContent":["import * as SpriteSpin from '../core'\nimport * as Utils from '../utils'\n\n(() => {\n\nconst max = Math.max\nconst min = Math.min\n\nconst NAME = 'ease'\n\ninterface EaseSample {\n  time: number\n  frame: number\n  lane: number\n}\n\ninterface EaseState {\n  damping: number\n  maxSamples: number\n  updateTime: number\n  abortTime: number\n  samples: EaseSample[]\n  steps: number[]\n  handler: number\n\n  lane: number\n  lanes: number\n  laneStep: number\n\n  frame: number\n  frames: number\n  frameStep: number\n}\n\nfunction getState(data) {\n  return SpriteSpin.getPluginState(data, NAME) as EaseState\n}\n\nfunction getOption(data, name, fallback) {\n  return data[name] || fallback\n}\n\nfunction init(e, data: SpriteSpin.Data) {\n  const state = getState(data)\n  state.maxSamples = max(getOption(data, 'easeMaxSamples', 5), 0)\n  state.damping = max(min(getOption(data, 'easeDamping', 0.9), 0.999), 0)\n  state.abortTime = max(getOption(data, 'easeAbortTime', 250), 16)\n  state.updateTime = max(getOption(data, 'easeUpdateTime', data.frameTime), 16)\n  state.samples = []\n  state.steps = []\n}\n\nfunction update(e, data: SpriteSpin.Data) {\n  if (SpriteSpin.is(data, 'dragging')) {\n    killLoop(data)\n    sampleInput(data)\n  }\n}\n\nfunction end(e, data: SpriteSpin.Data) {\n  const state = getState(data)\n  const samples = state.samples\n\n  let last\n  let lanes = 0\n  let frames = 0\n  let time = 0\n  for (const sample of samples) {\n    if (!last) {\n      last = sample\n      continue\n    }\n\n    const dt = sample.time - last.time\n    if (dt > state.abortTime) {\n      lanes = frames = time = 0\n      return killLoop(data)\n    }\n\n    frames += sample.frame - last.frame\n    lanes += sample.lane - last.lane\n    time += dt\n    last = sample\n  }\n  samples.length = 0\n  if (!time) {\n    return\n  }\n\n  state.lane = data.lane\n  state.lanes = 0\n  state.laneStep = lanes / time * state.updateTime\n\n  state.frame = data.frame\n  state.frames = 0\n  state.frameStep = frames / time * state.updateTime\n\n  loop(data)\n}\n\nfunction sampleInput(data: SpriteSpin.Data) {\n  const state = getState(data)\n  // add a new sample\n  state.samples.push({\n    time: new Date().getTime(),\n    frame: data.frame,\n    lane: data.lane\n  })\n  // drop old samples\n  while (state.samples.length > state.maxSamples) {\n    state.samples.shift()\n  }\n}\n\nfunction killLoop(data: SpriteSpin.Data) {\n  const state = getState(data)\n  if (state.handler != null) {\n    window.clearTimeout(state.handler)\n    state.handler = null\n  }\n}\n\nfunction loop(data: SpriteSpin.Data) {\n  const state = getState(data)\n  state.handler = window.setTimeout(() => { tick(data) }, state.updateTime)\n}\n\nfunction tick(data: SpriteSpin.Data) {\n  const state = getState(data)\n  state.lanes += state.laneStep\n  state.frames += state.frameStep\n  state.laneStep *= state.damping\n  state.frameStep *= state.damping\n  const frame = Math.floor(state.frame + state.frames)\n  const lane = Math.floor(state.lane + state.lanes)\n\n  SpriteSpin.updateFrame(data, frame, lane)\n\n  if (SpriteSpin.is(data, 'dragging')) {\n    killLoop(data)\n  } else if (Math.abs(state.frameStep) > 0.005 || Math.abs(state.laneStep) > 0.005) {\n    loop(data)\n  } else {\n    killLoop(data)\n  }\n}\n\nSpriteSpin.registerPlugin(NAME, {\n  name: NAME,\n\n  onLoad: init,\n\n  mousemove: update,\n  mouseup: end,\n  mouseleave: end,\n\n  touchmove: update,\n  touchend: end,\n  touchcancel: end\n})\n\n})()\n"]}