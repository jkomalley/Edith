import * as SpriteSpin from '../core';
(function () {
    var NAME = 'panorama';
    function getState(data) {
        return SpriteSpin.getPluginState(data, NAME);
    }
    function onLoad(e, data) {
        var state = getState(data);
        var sprite = data.metrics[0];
        if (!sprite) {
            return;
        }
        if (data.orientation === 'horizontal') {
            state.scale = data.target.innerHeight() / sprite.sampledHeight;
            data.frames = sprite.sampledWidth;
        }
        else {
            state.scale = data.target.innerWidth() / sprite.sampledWidth;
            data.frames = sprite.sampledHeight;
        }
        var width = Math.floor(sprite.sampledWidth * state.scale);
        var height = Math.floor(sprite.sampledHeight * state.scale);
        data.stage.css({
            'background-image': "url(" + data.source[sprite.id] + ")",
            'background-repeat': 'repeat-both',
            // set custom background size to enable responsive rendering
            '-webkit-background-size': width + "px " + height + "px",
            '-moz-background-size': width + "px " + height + "px",
            '-o-background-size': width + "px " + height + "px",
            'background-size': width + "px " + height + "px" /* Chrome, Firefox 4+, IE 9+, Opera, Safari 5+ */
        });
    }
    function onDraw(e, data) {
        var state = getState(data);
        var px = data.orientation === 'horizontal' ? 1 : 0;
        var py = px ? 0 : 1;
        var offset = data.frame % data.frames;
        var left = Math.round(px * offset * state.scale);
        var top = Math.round(py * offset * state.scale);
        data.stage.css({ 'background-position': left + "px " + top + "px" });
    }
    SpriteSpin.registerPlugin(NAME, {
        name: NAME,
        onLoad: onLoad,
        onDraw: onDraw
    });
})();
//# sourceMappingURL=render-panorama.js.map