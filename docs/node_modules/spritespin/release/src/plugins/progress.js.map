{"version":3,"file":"progress.js","sourceRoot":"","sources":["../../../src/plugins/progress.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,UAAU,MAAM,SAAS,CAAA;AACrC,OAAO,KAAK,KAAK,MAAM,UAAU,CAAA;AAEjC,CAAC;IAMD,IAAM,QAAQ,GAAG,+IAKhB,CAAA;IAED,kBAAkB,IAAqB;QACrC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAQ,IAAI,EAAE,IAAI,CAAC,CAAA;IACrD,CAAC;IAED,IAAM,IAAI,GAAG,UAAU,CAAA;IACvB,gBAAgB,CAAC,EAAE,IAAqB;QACtC,IAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;QAC5B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAA;YAC/B,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACnC,CAAC;QAED,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,4BAA4B,CAAC;aAC3C,IAAI,CAAC,IAAI,CAAC;aACV,GAAG,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,CAAA;QAClC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,GAAG,CAAC;YAC/C,KAAK,EAAE,IAAI;SACZ,CAAC,CAAA;QAEF,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAA;IAC7B,CAAC;IACD,oBAAoB,CAAC,EAAE,IAAqB;QAC1C,IAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;QAC5B,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,4BAA4B,CAAC;aAC3C,IAAI,CAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,MAAG,CAAC;aACjC,GAAG,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,CAAA;QAClC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,GAAG,CAAC;YAC/C,KAAK,EAAK,IAAI,CAAC,QAAQ,CAAC,OAAO,MAAG;SACnC,CAAC,CAAA;IACJ,CAAC;IAED,gBAAgB,CAAC,EAAE,IAAqB;QACtC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAA;IACzC,CAAC;IAED,mBAAmB,CAAC,EAAE,IAAqB;QACzC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAA;IACxC,CAAC;IAED,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE;QAC9B,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,MAAM;QACd,UAAU,EAAE,UAAU;QACtB,MAAM,EAAE,MAAM;QACd,SAAS,EAAE,SAAS;KACrB,CAAC,CAAA;AAEF,CAAC,CAAC,EAAE,CAAA","sourcesContent":["import * as SpriteSpin from '../core'\nimport * as Utils from '../utils'\n\n(() => {\n\ninterface State {\n  stage: JQuery<HTMLElement>\n}\n\nconst template = `\n<div class='spritespin-progress'>\n  <div class='spritespin-progress-label'></div>\n  <div class='spritespin-progress-bar'></div>\n</div>\n`\n\nfunction getState(data: SpriteSpin.Data) {\n  return SpriteSpin.getPluginState<State>(data, NAME)\n}\n\nconst NAME = 'progress'\nfunction onInit(e, data: SpriteSpin.Data) {\n  const state = getState(data)\n  if (!state.stage) {\n    state.stage = Utils.$(template)\n    state.stage.appendTo(data.target)\n  }\n\n  state.stage.find('.spritespin-progress-label')\n    .text(`0%`)\n    .css({ 'text-align': 'center' })\n  state.stage.find('.spritespin-progress-bar').css({\n    width: `0%`\n  })\n\n  state.stage.hide().fadeIn()\n}\nfunction onProgress(e, data: SpriteSpin.Data) {\n  const state = getState(data)\n  state.stage.find('.spritespin-progress-label')\n    .text(`${data.progress.percent}%`)\n    .css({ 'text-align': 'center' })\n  state.stage.find('.spritespin-progress-bar').css({\n    width: `${data.progress.percent}%`\n  })\n}\n\nfunction onLoad(e, data: SpriteSpin.Data) {\n  Utils.$(getState(data).stage).fadeOut()\n}\n\nfunction onDestroy(e, data: SpriteSpin.Data) {\n  Utils.$(getState(data).stage).remove()\n}\n\nSpriteSpin.registerPlugin(NAME, {\n  name: NAME,\n  onInit: onInit,\n  onProgress: onProgress,\n  onLoad: onLoad,\n  onDestroy: onDestroy\n})\n\n})()\n"]}