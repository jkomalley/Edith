{"version":3,"file":"naturalSize.js","sourceRoot":"","sources":["../../../src/utils/naturalSize.ts"],"names":[],"mappings":"AAAA,IAAI,GAAqB,CAAA;AAEzB;;GAEG;AACH,MAAM,sBAAsB,KAAuB;IACjD,sEAAsE;IACtE,EAAE,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC;YACL,MAAM,EAAE,KAAK,CAAC,aAAa;YAC3B,KAAK,EAAE,KAAK,CAAC,YAAY;SAC1B,CAAA;IACH,CAAC;IAED,4GAA4G;IAC5G,4GAA4G;IAC5G,wGAAwG;IACxG,aAAa;IACb,EAAE;IACF,oFAAoF;IACpF,GAAG,GAAG,GAAG,IAAI,IAAI,KAAK,EAAE,CAAA;IACxB,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAA;IACnC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAA;IACnB,MAAM,CAAC;QACL,MAAM,EAAE,GAAG,CAAC,MAAM;QAClB,KAAK,EAAE,GAAG,CAAC,KAAK;KACjB,CAAA;AACH,CAAC","sourcesContent":["let img: HTMLImageElement\n\n/**\n * gets the original width and height of an image element\n */\nexport function naturalSize(image: HTMLImageElement) {\n  // for browsers that support naturalWidth and naturalHeight properties\n  if (image.naturalWidth) {\n    return {\n      height: image.naturalHeight,\n      width: image.naturalWidth\n    }\n  }\n\n  // browsers that do not support naturalWidth and naturalHeight properties have to fall back to the width and\n  // height properties. However, the image might have a css style applied so width and height would return the\n  // css size. To avoid that create a new Image object that is free of css rules and grab width and height\n  // properties\n  //\n  // assume that the src has already been downloaded, so no onload callback is needed.\n  img = img || new Image()\n  img.crossOrigin = image.crossOrigin\n  img.src = image.src\n  return {\n    height: img.height,\n    width: img.width\n  }\n}\n"]}