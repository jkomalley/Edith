function indexOf(element, arr) {
    for (var i = 0; i < arr.length; i++) {
        if (arr[i] === element) {
            return i;
        }
    }
}
function noop() {
    //
}
export function preload(opts) {
    var src;
    var input = opts.source;
    src = typeof input === 'string' ? [input] : input;
    // const src: string[] =  ? [opts.source] : opts.source
    var images = [];
    var targetCount = (opts.preloadCount || src.length);
    var onInitiated = opts.initiated || noop;
    var onProgress = opts.progress || noop;
    var onComplete = opts.complete || noop;
    var count = 0;
    var completed = false;
    var firstLoaded = false;
    var tick = function () {
        count += 1;
        onProgress({
            index: indexOf(this, images),
            loaded: count,
            total: src.length,
            percent: Math.round((count / src.length) * 100)
        });
        firstLoaded = firstLoaded || (this === images[0]);
        if (firstLoaded && !completed && (count >= targetCount)) {
            completed = true;
            onComplete(images);
        }
    };
    for (var _i = 0, src_1 = src; _i < src_1.length; _i++) {
        var url = src_1[_i];
        var img = new Image();
        // push result
        images.push(img);
        // https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image
        img.crossOrigin = opts.crossOrigin;
        // bind logic, don't care about abort/errors
        img.onload = img.onabort = img.onerror = tick;
        // begin load
        img.src = url;
    }
    onInitiated(images);
}
//# sourceMappingURL=preload.js.map