{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/utils/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAE7C,MAAM;IACJ,OAAO;AACT,CAAC;AAED,qBAAqB,IAAY;IAC/B,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAAC,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAK,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC;IAAhC,CAAgC,CAAC,CAAC,CAAC,IAAI,CAAA;AAC/F,CAAC;AAED,MAAM,CAAC,IAAM,GAAG,GAAG,WAAW,CAAC,KAAK,CAAC,CAAA;AACrC,MAAM,CAAC,IAAM,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC,CAAA;AACvC,MAAM,CAAC,IAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAA;AAEzC,MAAM,kBAAqB,KAAc;IACvC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;AAC/C,CAAC;AAED;;GAEG;AACH,MAAM,gBAAgB,KAAa,EAAE,GAAW,EAAE,GAAW;IAC3D,MAAM,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;AAC1D,CAAC;AAED;;GAEG;AACH,MAAM,eAAe,KAAa,EAAE,GAAW,EAAE,GAAW,EAAE,IAAY;IACxE,OAAO,KAAK,GAAG,GAAG,EAAE,CAAC;QAAC,KAAK,IAAI,IAAI,CAAA;IAAC,CAAC;IACrC,OAAO,KAAK,GAAG,GAAG,EAAE,CAAC;QAAC,KAAK,IAAI,IAAI,CAAA;IAAC,CAAC;IACrC,MAAM,CAAC,KAAK,CAAA;AACd,CAAC;AAED;;GAEG;AACH,MAAM,kBAAkB,CAAC;IACvB,CAAC,CAAC,cAAc,EAAE,CAAA;IAClB,MAAM,CAAC,KAAK,CAAA;AACd,CAAC;AAED;;;GAGG;AACH,MAAM,eAAe,MAAc,EAAE,KAAa,EAAE,IAA6B;IAC/E,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACT,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,SAAS,EAAE,UAAC,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,EAAG,MAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QAC7D,CAAC,CAAC,CAAA;IACJ,CAAC;AACH,CAAC;AAED;;GAEG;AACH,MAAM,iBAAiB,MAAc;IACnC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC,CAAA;AAChC,CAAC;AAED;;GAEG;AACH,MAAM,qBAAqB,EAAO;IAChC,MAAM,CAAC,OAAO,EAAE,KAAK,UAAU,CAAA;AACjC,CAAC;AAED,MAAM,qBAAqB,OAAO;IAChC,IAAM,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,IAAI,CAAC,CAAA;IACrD,IAAM,iBAAiB,GACrB,OAAO,CAAC,4BAA4B;QACpC,OAAO,CAAC,yBAAyB;QACjC,OAAO,CAAC,wBAAwB;QAChC,OAAO,CAAC,uBAAuB;QAC/B,OAAO,CAAC,sBAAsB,IAAI,CAAC,CAAA;IACrC,MAAM,CAAC,gBAAgB,GAAG,iBAAiB,CAAA;AAC7C,CAAC","sourcesContent":["import { namespace } from '../core/constants'\n\nexport function noop() {\n  // noop\n}\n\nfunction wrapConsole(type: string): (message?: any, ...optionalParams: any[]) => void {\n  return console && console[type] ? (...args: any[]) => console.log.apply(console, args) : noop\n}\n\nexport const log = wrapConsole('log')\nexport const warn = wrapConsole('warn')\nexport const error = wrapConsole('error')\n\nexport function toArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value]\n}\n\n/**\n * clamps the given value by the given min and max values\n */\nexport function clamp(value: number, min: number, max: number) {\n  return (value > max ? max : (value < min ? min : value))\n}\n\n/**\n *\n */\nexport function wrap(value: number, min: number, max: number, size: number) {\n  while (value > max) { value -= size }\n  while (value < min) { value += size }\n  return value\n}\n\n/**\n * prevents default action on the given event\n */\nexport function prevent(e) {\n  e.preventDefault()\n  return false\n}\n\n/**\n * Binds on the given target and event the given function.\n * The SpriteSpin namespace is attached to the event name\n */\nexport function bind(target: JQuery, event: string, func: (...args: any[]) => any) {\n  if (func) {\n    target.bind(event + '.' + namespace, (e) => {\n      func.apply(target, [e, (target as any).spritespin('data')])\n    })\n  }\n}\n\n/**\n * Unbinds all SpriteSpin events from given target element\n */\nexport function unbind(target: JQuery): void {\n  target.unbind('.' + namespace)\n}\n\n/**\n * Checks if given object is a function\n */\nexport function isFunction(fn: any): boolean {\n  return typeof fn === 'function'\n}\n\nexport function pixelRatio(context) {\n  const devicePixelRatio = window.devicePixelRatio || 1\n  const backingStoreRatio =\n    context.webkitBackingStorePixelRatio ||\n    context.mozBackingStorePixelRatio ||\n    context.msBackingStorePixelRatio ||\n    context.oBackingStorePixelRatio ||\n    context.backingStorePixelRatio || 1\n  return devicePixelRatio / backingStoreRatio\n}\n"]}